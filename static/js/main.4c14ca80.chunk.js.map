{"version":3,"sources":["components/project_info/project_info.component.jsx","components/project/project.component.jsx","components/projects/projects.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Panel","Collapse","ValidationInfo","props","header","info","date","Intl","NumberFormat","format","items","columns","columns_list","join","TabPane","Tabs","Project","span","title","project","name","bordered","extra","style","marginRight","fontSize","PlayCircleOutlined","onClick","projectStatusChanger","status","color","PauseCircleOutlined","cursor","defaultActiveKey","tab","QuestionCircleOutlined","Group","size","gutter","placeholder","suffix","feed_validation_status","validation","CheckCircleFilled","InfoCircleFilled","type","disabled","marginTop","count","templates","length","backgroundColor","showZero","rules_sets","feeds","Projects","direction","projects","map","idx","index","Header","Layout","Content","Footer","Sider","SubMenu","Menu","App","changeProjectStatus","e","console","log","onCollapse","collapsed","setState","state","feed_link","menu","Item","target","rel","href","this","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","icon","UserOutlined","overlay","placement","arrow","margin","textAlign","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c14ca80.chunk.js","sourcesContent":["import React from 'react';\nimport {Collapse} from 'antd';\n\nconst {Panel} = Collapse;\n\nexport const ValidationInfo = props => {\n  return (\n    <Collapse>\n      <Panel header=\"Validation information\" key=\"1\">\n        <p>Last validation date: {props.info.date}</p>\n        <p>Items found: {new Intl.NumberFormat('ru-RU').format(props.info.items)}</p>\n        <p>Columns found: {props.info.columns}</p>\n        <p>Columns list: {props.info.columns_list.join(', ')}</p>\n      </Panel>\n    </Collapse>\n  )\n}","import React from 'react';\nimport {ValidationInfo} from '../project_info/project_info.component'\nimport {Row, Col, Card, Tabs, Input, Collapse, Tooltip, Button, Badge} from 'antd';\n\nimport {\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  CheckCircleFilled,\n  InfoCircleFilled,\n  QuestionCircleOutlined\n} from '@ant-design/icons';\n\nconst {TabPane} = Tabs;\nconst {Panel} = Collapse;\n\nexport const Project = props => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Card title={props.project.name} bordered={false} extra={(\n          <span>\n            <span style={{marginRight: '10px', fontSize: '14px'}}>Status: Active</span>\n            <PlayCircleOutlined\n              onClick={props.projectStatusChanger}\n              style={props.project.status ? {color: \"#52c41a\", marginRight: '5px'} : {\n                color: \"grey\",\n                marginRight: '5px'\n              }}/>\n            <PauseCircleOutlined\n              style={props.project.status ? {color: \"grey\", cursor: 'pointer'} : {color: \"orange\", cursor: 'pointer'}}/>\n          </span>\n        )}>\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane\n              tab={\n                <span>\n                  <QuestionCircleOutlined/>\n                    Info\n                </span>\n              }\n              key=\"1\">\n              <Row key=\"1\">\n                <Col span={12}>\n                  Data source <br/>\n                  <Input.Group size=\"medium\">\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Input size=\"medium\" placeholder=\"https://example.com/feed.csv\" suffix={\n                          props.project.feed_validation_status ?\n                            <Tooltip title={`Feed was successfully validated on ${props.project.validation.date}`}>\n                              <CheckCircleFilled style={{color: 'green'}}/>\n                            </Tooltip>\n                            :\n                            <Tooltip title='Last feed validation failed. Please fix th error and try validating again'>\n                              <InfoCircleFilled style={{color: 'red'}}/>\n                            </Tooltip>\n                        }/>\n                      </Col>\n                      <Col span={4}>\n                        <Button type=\"primary\" size={'medium'} disabled={props.project.feed_validation_status}>\n                          Primary\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Input.Group>\n                </Col>\n              </Row>\n              <Row key=\"2\" style={{marginTop: '10px'}}>\n                <Col span={24}>\n                  <ValidationInfo info={props.project.validation}/>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane\n              tab={\n                <span>\n                  <Badge count={props.project.templates.length} style={\n                    props.project.templates.length > 0 ?\n                      {backgroundColor: '#52c41a', marginRight: '5px'} :\n                      {backgroundColor: '#6f6e6e', marginRight: '5px'}\n                  } showZero/>\n                    Template\n                </span>\n              }\n              key=\"2\">\n              Tab 2\n            </TabPane>\n            <TabPane\n              tab={\n                <span>\n                  <Badge count={props.project.rules_sets.length} style={\n                    props.project.rules_sets.length > 0 ?\n                      {backgroundColor: '#52c41a', marginRight: '5px'} :\n                      {backgroundColor: '#6f6e6e', marginRight: '5px'}\n                  } showZero/>\n                    Rules Sets\n                </span>\n              }\n              key=\"3\">\n              Tab 2\n            </TabPane>\n            <TabPane\n              tab={\n                <span>\n                  <Badge count={props.project.feeds.length} style={\n                    props.project.feeds.length > 0 ?\n                      {backgroundColor: '#52c41a', marginRight: '5px'} :\n                      {backgroundColor: '#6f6e6e', marginRight: '5px'}\n                  } showZero/>\n                    Feeds\n                </span>\n              }\n              key=\"4\">\n              Tab 2\n            </TabPane>\n          </Tabs>\n        </Card>\n      </Col>\n    </Row>\n  )\n}","import React from 'react';\nimport { Space } from 'antd';\nimport { Project } from '../project/project.component'\n\nexport const Projects = props => {\n  return (\n    <div>\n      <Space direction=\"vertical\" style={{\"width\": \"100%\"}}>\n        {props.projects.map((project, idx) => (\n          <Project key={`project-${idx}`} project={project} index={idx} projectStatusChanger={props.projectStatusChanger}/>\n        ))}\n      </Space>\n    </div>\n  )\n}","import React from 'react'\nimport {\n  Layout,\n  Menu,\n  Breadcrumb,\n  Dropdown,\n  Avatar,\n} from 'antd';\nimport {\n  UserOutlined\n} from '@ant-design/icons';\nimport { Projects } from './components/projects/projects.component';\nimport './App.css'\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [\n        {\n          name: 'Project #1',\n          status: true,\n          feed_link: 'https://pfxtools-dev.ru/feeds/feed.csv',\n          feed_validation_status: true,\n          validation: {\n            'date': '01/01/2021',\n            'items': 9999,\n            'columns': 10,\n            'columns_list': ['id', 'title', 'description', 'link', 'image_link']\n          },\n          templates: [1,2,3,4,5],\n          rules_sets: [],\n          feeds: []\n        },\n        {\n          name: 'Project #2',\n          status: false,\n          feed_link: 'https://pfxtools-dev.ru/feeds/feed.csv',\n          feed_validation_status: true,\n          validation: {\n            'date': '01/01/2021',\n            'items': 9999,\n            'columns': 10,\n            'columns_list': ['id', 'title', 'description', 'link', 'image_link']\n          },\n          templates: [1,2,3,4],\n          rules_sets: [1],\n          feeds: []\n        },\n        {\n          name: 'Project #3',\n          status: false,\n          feed_link: 'https://pfxtools-dev.ru/feeds/feed.csv',\n          feed_validation_status: false,\n          validation: {\n            'date': '01/01/2021',\n            'items': 9999,\n            'columns': 10,\n            'columns_list': ['id', 'title', 'description', 'link', 'image_link']\n          },\n          templates: [1,2,3,4,5],\n          rules_sets: [1,2],\n          feeds: [1]\n        }\n      ],\n      collapsed: false,\n    };\n  }\n\n  changeProjectStatus = (e) => {\n    console.log(e)\n    // this.setState({})\n  }\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({collapsed});\n  };\n\n  render() {\n    const menu = (\n      <Menu>\n        <Menu.Item>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\n            1st menu item\n          </a>\n        </Menu.Item>\n        <Menu.Item>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\n            2nd menu item\n          </a>\n        </Menu.Item>\n        <Menu.Item>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\n            3rd menu item\n          </a>\n        </Menu.Item>\n      </Menu>\n    );\n    const {collapsed} = this.state;\n\n    return (\n      <Layout style={{minHeight: '100vh'}}>\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n          <div className=\"logo\"/>\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"DOT\">\n              <Menu.Item key=\"3\">Projects</Menu.Item>\n              <Menu.Item key=\"4\">Library</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<UserOutlined/>} title=\"Image API\">\n              <Menu.Item key=\"5\">Templates</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header>\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n              <Dropdown overlay={menu} placement=\"bottomCenter\" arrow>\n                <Avatar icon={<UserOutlined/>}/>\n              </Dropdown>\n            </Menu>\n          </Header>\n          <Content style={{margin: '0 16px'}}>\n            <Breadcrumb style={{margin: '16px 0'}}>\n              <Breadcrumb.Item>DOT</Breadcrumb.Item>\n              <Breadcrumb.Item>Projects</Breadcrumb.Item>\n            </Breadcrumb>\n\n            <Projects projects={this.state.projects} projectStatusChanger={this.changeProjectStatus}/>\n\n          </Content>\n          <Footer style={{textAlign: 'center'}}>DOT - Dynamic Optimisation Tool ©2018 Performics</Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}